/*

  org/jos/program2b.impl/BasicProgramContext.java
  This program is part of CjOS.

  CjOS is free software: you can redistribute it and/or modify
  it under the terms of the GNU Lesser General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.

  Installation : CjOS Project @ cjos.sourceforge.net
  Generated By : XVCL @ fxvcl.sourceforge.net
  SPC Location : eclipse/org.jos/module/program
  Date Written : GCHII July 27, 1999
  Date Revised : GCHII August 13, 1999
                 Upgraded from release 1a to 1b.
                 Release 1a was developed in
                 com.realignsoft.sourceservlet1a.
  Date Revised : GCHII August 16, 1999
                 Upgraded from version 1b to 1c.
                 Isolated parameter list part of
                 ProgramContext.
  Date Revised : GCHII August 16, 1999
                 Upgraded from version 1c to 1d.
  Date Revised : GCHII November 15, 1999
                 Upgraded from version 1d to 2a.
  Date Revised : GCHII August 17, 2000
                 Upgraded source to include license information.
  Date Revised : GCHII May 9, 2001
                 Upgraded from version 2a to 2b.

 */
package org.jos.program2b.impl;

import java.util.Enumeration;

import org.jos.program2a.ParameterList;

import org.jos.program2b.ProgramContext;

public final class BasicProgramContext implements ProgramContext {
	private String path;
	private final ParameterList parameterList = new BasicParameterList();
	private int resultCode;

	/**
	 * Creates a program context.
	 */
	public BasicProgramContext() {
		super();
	}

	/**
	 * Gets Path property.
	 */
	@Override
	public String getPath() {
		return path;
	}

	/**
	 * Sets Path property.
	 */
	public void setPath(String v) {
		path = v;
	}

	/**
	 * Gets Parameter[] property.
	 */
	@Override
	public String getParameter(int index) {
		return parameterList.getParameter(index);
	}

	/**
	 * Gets Value[] property.
	 */
	@Override
	public String getValue(String key) {
		return parameterList.getValue(key);
	}

	/**
	 * Gets Values property.
	 */
	@Override
	public String[] getValues(String v) {
		return null;
	}

	/**
	 * Gets ResultCode property.
	 */
	@Override
	public int getResultCode() {
		return resultCode;
	}

	/**
	 * Sets ResultCode property.
	 */
	@Override
	public void setResultCode(int v) {
		resultCode = v;
	}

	/**
	 * Gets Parameters property.
	 */
	@Override
	public Enumeration<String> getParameters() {
		return parameterList.getParameters();
	}

	/**
	 * Parses arguments.
	 */
	public void parseArguments(String v) {
		parameterList.parseArguments(v);
	}

	/**
	 * Parse arguments.
	 */
	public void parseArguments(String[] v) {
		parameterList.parseArguments(v);
	}
}
