function renderHTML( $text, $topic, $web ) {
	global $_SITE;

	/* Shamelessly stolen from TWiki. */
	$lines = split( "\n", $text );

	/* Prepare for rendering loop. */
	reset($lines);
	$insidePRE = false;
	$insideTABLE = false;

	$inList = false;
	$listDepth = 0;
	$listEnd = "";

	/* Rendering loop. */
	while( list( $key, $value ) = each($lines) ) {
		if( preg_match( "/<PRE>/i", $value ) ) { $insidePRE = true; }
		if( preg_match( "@</PRE>@i", $value ) ) { $insidePRE = false; }

		if( $insidePRE ) {
			/* Insert custom rendering code here. */
			$value = preg_replace( "/<PRE>/i", "$TT" . "PRE" . $TT, $value );

			$value = preg_replace(
				"/&(\w+?);/", "$TT\\1;", $value );
			$value = preg_replace(
				"/&(\#[0-9]+);/", "$TT\\1;", $value );

			$value = preg_replace(
				"/&/", "&amp;", $value );
			$value = preg_replace(
				"/</", "&lt;", $value );
			$value = preg_replace(
				"/>/", "&gt;", $value );

			$value = preg_replace( "/" . $TT . "PRE" . $TT . "/", "<PRE>", $value );

			$value = preg_replace( "/$TT/", "&", $value );
			} /* end if insidePRE */
		else {
			$TT = "\263";

			$value = preg_replace( "/\<(\/?LINK)\>/i", "%", $value );

			/* Ignore HTML and </> completely. */

			/* Blockquote */
			$value = preg_replace( "/^>(.*?)$/", "&gt;<cite>\\1</cite><BR>", $value );
			
			/* FIXME : embedded-URL IMAGE links */
			preg_match_all( 
				"@(^|[\-\*\s])((http|ftp|gopher|news|https)\:(\S+[^\s\.,!\?;:]))@",
				$value, $matches, PREG_SET_ORDER );

			reset($matches);
			while( $xprs = current($matches) ) {
				if( preg_match( "/\.(gif|jpg|jpeg|png)$/i", $xprs[2] ) ) {
					$tag = "img src=";
					$following = "";
					} else {
					$tag = "a href=";
					$following = $xprs[2] . "</a>";
					}
				$html = $xprs[1] . '<' . $tag . '"' . 
					$xprs[2] .
					'">' . $following;
				$value = str_replace( $xprs[0], $html, $value ); 
				next($matches);
				} /* end loop over URL links */

			$value = preg_replace(
				"@(^|[\-\*\s])((http|ftp|gopher|news|https)\:(\S+[^\s\.,!\?;:]))@",
				"\\1<a href=\"\\2\">\\2</a>", $value );

			/* cvs links */
			$value = preg_replace( "@(^|[\-\*\s])cvs://([A-Za-z]+)/([^\s\.,!\?;:]+/)+([^\.\s\\,\!\?\;\;]+)((\.([^\.\s\,\!\?\:\:]+))*)@e",

				'returnContentType( 
				"\\1<a href=\"" . "http://" . 
				 $_SITE["cvs_link"] . "\\2/\\3\\4\\5",
				"\\7",
				"\">cvs://\\2/\\3\\4\\5</a>"
				);',
				$value );
			
			/* entities */
			$value = preg_replace(
				"/&(\w+?);/", "$TT\\1;", $value );
			$value = preg_replace(
				"/&(\#[0-9]+);/", "$TT\\1;", $value );
			$value = preg_replace(
				"/&/", "&amp;", $value );
			$value = preg_replace(
				"/$TT/", "&", $value );

			$value = preg_replace(
				"/^----*/", "<HR>", $value );
			$value = preg_replace(
				"@^([a-zA-Z0-9]+)----*@",
				"<table width=\"100%\"><tr><td valign=\"bottom\"><h2>\\1</h2></td><td width=\"98%\" valign=\"middle\"><HR></td></tr></table>",
				$value );

			/* table of format "| cell | [ cell | ]*" */
			if( preg_match( "/^(\s*)\|.*\|(\s*)$/", $value ) ) {
				if( $insideTABLE ) {
					$value = preg_replace(
						"/^(\s*)\|(\s*)(.*)/",
						"\\1<TR><TD>\\2\\3",
						$value );
					}
				else {
					$value = preg_replace(
						"/^(\s*)\|(\s*)(.*)/",
						"\\1<table border=\"2\" cellspacing=\"2\" cellpadding=\"2\"><TR><TD>\\2\\3",
						$value );
					}	
				
				$value = preg_replace(
					"/\|(\s*)$/",
					"</TD></TR>",
					$value );
				$value = preg_replace(
					"/\|/", "</TD><TD>", $value );
				$insideTABLE = true;
				}
			else if ( $insideTABLE ) {
				$value = "</TABLE>" . $value;
				$insideTABLE = false;
				}

			/* lists */
			if( preg_match( "/^\S+?/", $value ) && $inList == true ) {
				/* not a list item */
				$listDepth = 0;
				$inList = false;
				$value = $listEnd . $value;
				$listEnd = "";
				} $endOfList = true;

			/* Moving this to a function would be hazardous. */
			if( preg_match( "/^((?:(?:   )|\t)+)(\S+?):\s/", $value, $matches ) ) {
				/* definition list item */
				$inList = true;
				$endOfList = false;
				$listItemDepth = strlen( $matches[1] );
				if( preg_match( "/ +/", $matches[1] ) ) {
					$listItemDepth = $listItemDepth / 3;
					}

				$prepend = "";
				$indent = 0;
				while( $listItemDepth > $listDepth ) {
					$prepend = "<DL> " . $prepend;
					$listEnd = "</DL> " . $listEnd;
					$listDepth = $listDepth + 1;
					$indent = 1;
					}
				while( $listItemDepth < $listDepth ) {
					$closing = substr( $listEnd, 0, 6 );
					$listEnd = substr( $listEnd, 6 );
					$prepend = $closing . $prepend;
					$listDepth = $listDepth - 1;		
					$indent = -1;
					}
				
				/* Am I in the same kind of list? */
				$closing = substr( $listEnd, 0, 6 );
				if( $closing != "</DL> " ) {
					$prepend = $prepend . "<DL> ";
					$listEnd = "</DL> " . $listEnd;
					$listDepth = $listDepth + 1;
					}

				$value = preg_replace( "/^((?:(?:   )|\t)+)(\S+?):\s/",
					      $prepend . "<DT> \\2: <DD> ",	
					      $value );
				} /* end definition list item */

			if( preg_match( "/^((?:(?:   )|\t)+)\* /", $value, $matches ) ) {
				/* unorded list item */
				$inList = true;
				$endOfList = false;
				$listItemDepth = strlen( $matches[1] );
				if( preg_match( "/ +/", $matches[1] ) ) {
					$listItemDepth = $listItemDepth / 3;
					}

				$prepend = "";
				while( $listItemDepth > $listDepth ) {
					$prepend = "<UL> " . $prepend;
					$listEnd = "</UL> " . $listEnd;
					$listDepth = $listDepth + 1;
					}
				while( $listItemDepth < $listDepth ) {
					$closing = substr( $listEnd, 0, 6 );
					$listEnd = substr( $listEnd, 6 );
					$prepend = $closing . $prepend;
					$listDepth = $listDepth - 1;
					}

				/* Am I in the same kind of list? */
				$closing = substr( $listEnd, 0, 6 );
				if( $closing != "</UL> " ) {
					$prepend = $prepend . "<UL> ";
					$listEnd = "</UL> " . $listEnd;
					$listDepth = $listDepth + 1;
					}
				
				$value = preg_replace( "/^((?:(?:   )|\t)+)\* /",
					      $prepend . "<LI> ",	
					      $value );
				} /* end unordered list item */

			if( preg_match( "/^((?:(?:   )|\t)+)((# )|(\d+\.?))/", $value, $matches ) ) {
				/* ordered list item */
				$inList = true;
				$endOfList = false;
				$listItemDepth = strlen( $matches[1] );
				if( preg_match( "/ +/", $matches[1] ) ) {
					$listItemDepth = $listItemDepth / 3;
					}

				$prepend = "";
				while( $listItemDepth > $listDepth ) {
					$prepend = "<OL> " . $prepend;
					$listEnd = "</OL> " . $listEnd;
					$listDepth = $listDepth + 1;
					}
				while( $listItemDepth < $listDepth ) {
					$closing = substr( $listEnd, 0, 6 );
					$listEnd = substr( $listEnd, 6 );
					$prepend = $closing . $prepend;
					$listDepth = $listDepth - 1;
					}

				/* Am I in the same kind of list? */
				$closing = substr( $listEnd, 0, 6 );
				if( $closing != "</OL> " ) {
					$prepend = $prepend . "<OL> ";
					$listEnd = "</OL> " . $listEnd;
					$listDepth = $listDepth + 1;
					}
				
				$value = preg_replace( "/^((?:(?:   )|\t)+)((# )|(\d+\.?))/",
					      $prepend . "<LI> ",	
					      $value );
				} /* end ordered list item */

			if( $endOfList && $inList ) {
				/* I found no list items,
				   but I /was/ in a list. */
				$listDepth = 0;
				$inList = false;
				$value = $listEnd . $value;
				$listEnd = "";
				}				

			/* blank lines become paragraphs */
			$value = preg_replace( "/^(\s*)$/", "</P><P>", $value );

			/* mailto */
			$value = preg_replace( 
				"#(^|[\s\(])(?:mailto\:)*([a-zA-Z0-9\-\_\.]+@[a-zA-Z0-9\-\_\.]+)(?=[\s\)]|$)#",
				'\\1<a href="mailto:\\2">\\2</a>',
				$value );

			/* And finally, WikiLinks... */

			/* Web.TopicName */
			$value = preg_replace(
				"/(^|[\*\s][\(\-\*\s]*)([A-Z]+[a-z]*)\.([A-Z]+[a-z]+(?:[A-Z]+[a-zA-Z0-9]*))/",
				'\\1<a href="' . $_SITE["docrootdir"] .
				'view.php?topic=\\3&web=\\2">' . $TT . "\\2.\\3" . $TT . '</a>' .
				"<wikitopic $TT\\3$TT /wikitopic>",
				$value );
			/* TopicName */
			$value = preg_replace(
				"/(^|[\*\s][\(\-\*\s]*)([A-Z]+[a-z]+(?:[A-Z]+[a-zA-Z0-9]*))/",
				'\\1<a href="' . $_SITE["docrootdir"] .
				'view.php?topic=\\2">\\2</a>' .
				'<wikitopic \\2 /wikitopic>',
				$value );
			
			$value = preg_replace( "/\>" . $TT . "(.*?)" . $TT . "\</",
				">\\1<", $value );
			$value = preg_replace( "#\<wikitopic $TT(.*?)$TT /wikitopic>#", "<wikitopic \\1 /wikitopic>", $value );

			/* Link acronyms. */
			$value = preg_replace(
				"/(^|[\*\s][\-\*\s]*)([A-Z]{3,})($|[\*\s])/",
				'\\1<a href="' . $_SITE["docrootdir"] .
				'view.php?topic=\\2&web=' . $web . '">\\2</a>\\3' .
				'<wikitopic \\2 /wikitopic>',
				$value );
		
			/* Unlink <nolink></nolink> */
			$value = preg_replace(
				"/<nolink>(.*?)<\/nolink>/i",
				"\\1", 
				$value );

			/* A few custom markups. */
		
			/* '*' and '_' as bold and underline, respectively. */
			$value = preg_replace(
				"/(^|[^\*_])\*_([^\*_\s][^\*_]*[^\*_\s])_\*($|[^\*_])/",
				"\\1<STRONG><EM>\\2</EM></STRONG>\\3",
				$value );
			$value = preg_replace(
				"/(^|[^\*_])_\*([^\*_\s][^\*_]*[^\*_\s])\*_($|[^\*_])/",
				"\\1<STRONG><EM>\\2</EM></STRONG>\\3",
				$value );
			$value = preg_replace(
				"/(^|[^\*])\*([^\*\s][^\*]*[^\*\s])\*($|[^\*])/",
				"\\1<STRONG>\\2</STRONG>\\3",
				$value );
			$value = preg_replace(
				"/(^|\s)_([^_\s][^_]*[^_\s])_($|\s)/",
				"\\1<EM>\\2</EM>\\3",
				$value );

			/* WikiLinks from JOSWiki... */

			/* %Web:WikiName% */
			$value = preg_replace(
				"/(^|\s|\()\%([^\s].*?[^\s])\:([^\s].*?[^\s])\%/",
				'\\1<a href="' . $_SITE["docrootdir"] .
				'view.php?topic=\\3&web=\\2">\\2:\\3</a>' .
				'<wikitopic \\3 /wikitopic>',
				$value );

			/* %Odd Wiki Name% */
			$value = preg_replace(
				"/(^|[^%])%(\w|(\w[^%]+\w))%($|[^%])/",
				'\\1<a href="' . $_SITE["docrootdir"] .
				'view.php?topic=\\2">\\2</a>' .
				"<wikitopic \\2 /wikitopic>\\4",
				$value );
			
			/* %Web.Odd Wiki Name% */
			$value = preg_replace(
				"/(^|\s|\()\%([a-zA-Z0-9]+)\.(.*?[^\s])\%(\s|\)|$)/",
				'\\1<a href="' . $_SITE["docrootdir"] .
				'view.php?topic=\\3&web=\\2">\\3</a>' .
				'<wikitopic \\3 /wikitopic>',
				$value );				

			} /* end if not insidePRE */

		/* Store the rendering done so far. */
		$result = $result . "\n" . $value;
		} /* end rendering loop */
	
	/* Take care of some terminal conditions. */
	if( $insideTABLE ) { $result = $result . "</TABLE>\n"; }
	if( $insidePRE ) { $result = $result . "</PRE>\n"; }
	$result = $result . $listEnd;

	/* Fix up 'Topics With Spaces'. */
	$result = preg_replace( '/(topic\=)([^"]*)(\&web)/e', 
		'"\\1" . urlencode( "\\2" ) . "\\3"',
		$result );

	/* Return the finished product. */
	return "<P>" . $result . "<BR><BR></P>";	// Formatting.
} /* end renderHTML() */
