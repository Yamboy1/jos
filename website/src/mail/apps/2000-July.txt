From gchii@mindspring.com Wed, 19 Jul 2000 13:40:06 -0400
Date: Wed, 19 Jul 2000 13:40:06 -0400
From: Gilbert Carl Herschberger II gchii@mindspring.com
Subject: [JOS-Apps] [eric tool] Improvements

The eric tool is part of the ERIC Project. ERIC is for execute, run, invoke
and call.

An additional property in a configuration file should be "extrapath". The
eric tool is expected to appended an extra path to the end of
java.class.path. With an "extrapath", it becomes possible to include
specific jars (and classes) in your Java application.

The current properties are path, shell, location, javahome and library. The
path property is a package path.

An extrapath may contain more than one directory/archive. If its a
directory, only classes are added to java.class.path. If its an archive,
classes in the archive are added to java.class.path. Currently, the
semi-colon is a path separator on all platforms.

Another property could be designed for archivepath. When an archivepath
points to a directory, every archive (jar or zip) is added to
java.class.path. This would enable the eric tool to point to the lib/ext
directory of JDK 1.2 or higher.





From gchii@mindspring.com Wed, 19 Jul 2000 13:52:30 -0400
Date: Wed, 19 Jul 2000 13:52:30 -0400
From: Gilbert Carl Herschberger II gchii@mindspring.com
Subject: [JOS-Apps] [eric tool] Java Web Start

No installation required. The ERIC Project shows that agents, applets,
applications and servlets can be downloaded across the network. Basically,
you can skip the explicit installation step.

Sun Microsystems is pursuing Java Web Start. It follows some of the basic
ideas behind the ERIC project. On the positive, the community has learned
that large Java applications, not applets, can be downloaded automatically
across the network. 

Sun Microsystems mistakenly claims that Java Web Start is the first product
in this category. Unfortunately, some of the implications of extreme reuse
have not yet been considered by Sun. Java Web Start is jar-oriented and
downloads a package once for each application.

ERIC is more flexible. The eric tool uses package files. Each package is
downloaded independently. So, when hundreds of applications use the same
package, it is downloaded once, not once for each application. The eric
tool is more scaleable than Java Web Start.





From gchii@mindspring.com Thu, 27 Jul 2000 16:32:21 -0400
Date: Thu, 27 Jul 2000 16:32:21 -0400
From: Gilbert Carl Herschberger II gchii@mindspring.com
Subject: [JOS-Apps] [eric] How To:

For me, the most exciting thing about Java technologies has been starting
Java applications from a CD-ROM and from across the network. The eric tool
enables me to do that on Windows. I haven't used the java tool in a long
time. I have been using either José or ERIC for the last two years. It
doesn't take me long to package a new Java application into an .exe.

I'm working on a new HTML page for the ERIC Project website at

http://www.mindspring.com/~gchii/eric/

Many Java programmers want to distribute their Java application as a
Windows executable. That's not asking too much is it? And a Java programmer
should not be required to learn C/C++ and Java Native Interface (JNI) just
for this. There is a better way. The most difficult part can be done once.

First, the eric tool is designed to be reusable. For example, websource.exe
is a verbatim copy of eric.exe. There is no separate source code for
websource.exe. Java programmers are not required to learn C/C++ or JNI.

Second, the eric tool always reads its configuration from a file with the
same name. As eric.exe, it reads configuration from eric.ini. As
websource.exe, it reads websource.ini. As minisrv.exe, it reads minisrv.ini.

Let's say you want to run a Java application called "myApp". Use the
following steps:

1. copy eric.exe to myApp.exe.
2. copy eric.ini to myApp.ini.
3. edit myApp.ini with a text editor
4. change the shell property to "myApp" and save myApp.ini.

-----

Inside the configuration file, there are four properties.

path - This is a list of directories or websites where the program can
download package files.

shell - This is the name of any Java class that implements
org.jos.gchii.eric1c.Shell.

location - This property is optional. This is the name of a location or
command that is passed to a shell.

javahome - This property is optional. On many machines, the eric tool finds
a JDK/JRE automatically. To select a specific JDK/JRE, use this property.





From gchii@mindspring.com Thu, 27 Jul 2000 20:56:32 -0400
Date: Thu, 27 Jul 2000 20:56:32 -0400
From: Gilbert Carl Herschberger II gchii@mindspring.com
Subject: [JOS-Apps] [eric] Improved homepage

The ERIC Project has an improved homepage. It now incorporates the design
from the label of the ERIC CD-ROM.

<URL:http://www.mindspring.com/~gchii/eric>

If you'd like to turn your Java application into a Windows executable, see
also the Customize page.





From gchii@mindspring.com Thu, 27 Jul 2000 20:59:23 -0400
Date: Thu, 27 Jul 2000 20:59:23 -0400
From: Gilbert Carl Herschberger II gchii@mindspring.com
Subject: [JOS-Apps] [eric] Volunteers wanted

Let me know if you're interested in any of the following tasks:

eric tool - This tool needs (C++) better error messages, incorporate
SharedLibrary class from Zerich 1b, incorporate bytecode as a resource,
include extrapath and jarpath property, and (Java) a jar package provider.

erica tool - (Java) This tool needs to parse an HTML page for links to jar
and package files, copy (download) .jar and .package file to a cache
directory (creating it if necessary), deleting cache/*.jar and
cache/*package. The GUI version should provide a button for cleaning up the
cache. It should provide a text field for entering the name of a directory
or any HTML page, including pages on the Internet/intranet.

deric tool - (Java) This tool needs to create package files directly from a
jar.





